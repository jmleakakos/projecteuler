# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
def fibs_up_to(n):
    last = 2
    second_to_last = 1
    fibs = [second_to_last, last]
    while last < n:
        next_fib = second_to_last + last
        if (next_fib >= n):
            break
        fibs.append(next_fib)
        second_to_last = last
        last = next_fib
    return fibs

limit = 4000000
value = sum([x for x in fibs_up_to(limit) if x % 2 == 0])
print(value)
print(value == 4613732)
