/*
 If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9. The sum of these multiples is 23.
Find the sum of all the multiples of 3 or 5 below 1000.
 */
function problem001() {
  var start = 1;
  var end = 1000;
  var sum = 0;

  for(var i = start; i < 1000; i++) {
    if(i % 3 == 0 || i % 5 ==0) {
      sum += i;
    }
  }
  console.log("Problem 001: " + sum);
}

/*
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */

function problem002() {
  
  var sum = fibonaccis(4000000).reduce(function(a,v) { return v % 2 == 0 ? a + v : a}, 0)
  console.log("Problem 002: " + sum);
}

function fibonaccis(stopWhen = 2) {
  var fib1 = 1;
  var fib2 = 2;
  var currentFib = fib2;
  var nextFib = fib1 + fib2;
  var fibs = [fib1, fib2];

  while(nextFib < stopWhen) {
    fibs.push(nextFib);
    var nextFibTemp = nextFib;
    nextFib = currentFib + nextFibTemp;
    currentFib = nextFibTemp;
  }
  return fibs;
}
